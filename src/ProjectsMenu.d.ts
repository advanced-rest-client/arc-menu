/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   src/ProjectsMenu.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {ArcMenuBase} from './ArcMenuBase.js';

import {ProjectsListConsumerMixin} from '@advanced-rest-client/projects-list-consumer-mixin/projects-list-consumer-mixin.js';

import {AnypointMenuMixin} from '@anypoint-web-components/anypoint-menu-mixin/anypoint-menu-mixin.js';

export {ProjectsMenuWrapper};

declare class ProjectsMenuWrapper {
  render(): any;
}

export {ProjectsMenu};

declare namespace UiElements {

  /**
   * A list of projects in the ARC main menu.
   *
   * The element uses direct implementation of the PouchDB to make a query to the
   * datastore. It also listens to events fired by the `arc-model` elements to
   * update state of the saved items.
   *
   * ### Example
   *
   * ```html
   * <projects-menu
   *  selectedproject="project-id"
   *  selectedrequest="id-of-selected-request"></projects-menu>
   * ```
   */
  class ProjectsMenu extends
    ProjectsListConsumerMixin(
    Object) {
    listType: any;
    readonly modelTemplate: any;
    readonly requestModel: any;
    readonly projectModel: any;

    /**
     * A timeout after which the project item is opened when dragging a
     * request over.
     */
    dragOpenTimeout: number|null|undefined;
    _openedProjects: any[]|null|undefined;
    disconnectedCallback(): void;
    refresh(): void;
    _cancelEvent(e: any): void;
    _deselectMenuOption(list: any): void;

    /**
     * Handler for the click event "details" menu item.
     * Dispatches "navigate" event
     */
    _openProject(e: ClickEvent|null): void;

    /**
     * Handler for the click event "open all" menu item.
     */
    _openAllRequests(e: ClickEvent|null): void;

    /**
     * Handler for the click event "replace all" menu item.
     */
    _replaceAllRequests(e: ClickEvent|null): void;

    /**
     * Dispatches `workspace-open-project-requests` event end returns it.
     *
     * @param project Project object
     * @param replace When true the requests are to be replaced in the workspace.
     */
    _dispatchOpenRequests(project: object|null, replace: Boolean|null): CustomEvent|null;

    /**
     * Dispatches bubbling and composed custom event.
     * By default the event is cancelable until `cancelable` property is set to false.
     *
     * @param type Event type
     * @param detail A detail to set
     * @param cancelable True if the event is cancelable (default value).
     */
    _dispatch(type: String|null, detail: any|null, cancelable: Boolean|null): CustomEvent|null;

    /**
     * Handler for `dragover` event on this element.
     */
    _dragoverHandler(e: DragEvent|null): void;

    /**
     * Handler for `dragleave` event on project node.
     */
    _dragleaveHandler(e: DragEvent|null): void;

    /**
     * Handler for `drag` event on this element. If the dagged item is compatible
     * it adds request to the project
     */
    _dropHandler(e: DragEvent|null): void;

    /**
     * Cancels the timer set in the dragover event
     */
    _cancelDragTimeout(): void;

    /**
     * Opens the project from the draggable event.
     */
    _openProjectDragOver(): void;

    /**
     * Handler for the `dragstart` event added to the list item when `draggableEnabled`
     * is set to true.
     * This function sets request data on the `dataTransfer` object with `arc/request-object`
     * mime type. The request data is a serialized JSON with request model.
     */
    _dragStart(e: Event|null): void;
    _toggleOpen(e: any): void;

    /**
     * Updates icon size CSS variable and notifies resize on the list when
     * list type changes.
     */
    _updateListStyles(type: String|null): void;
    _unavailableTemplate(): any;
    _projectMenuTemplate(index: any, compatibility: any): any;
    _requestsTemplate(item: any, draggableEnabled: any, compatibility: any, listType: any): any;
    _listTemplate(): any;
    render(): any;
  }
}
